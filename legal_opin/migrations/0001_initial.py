# Generated by Django 5.2.1 on 2025-08-22 10:04

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Credit_product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Кредитный продукт')),
            ],
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('inn', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='ИНН должен содержать 10 или 12 цифр', regex='^(\\d{10}|\\d{12})$')], verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='ОГРН должен содержать 13 цифр', regex='^\\d{13}$')], verbose_name='ОГРН')),
                ('legal_form', models.TextField(verbose_name='Организационно-правовая форма')),
                ('company_group', models.TextField(verbose_name='Группа компаний')),
                ('status', models.TextField(verbose_name='Статус')),
                ('authorized_capital', models.TextField(verbose_name='Уставной капитал')),
                ('capital_org', models.TextField(blank=True, null=True, verbose_name='Информация о доле, принадлежащей обществу')),
                ('registrar', models.TextField(blank=True, null=True, verbose_name='Реестродержатель')),
                ('registrar_inn', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='ИНН должен содержать 10 или 12 цифр', regex='^(\\d{10}|\\d{12})$')], verbose_name='ИНН реестродержателя')),
                ('address', models.TextField(default=None, verbose_name='Юрисдикция/местонахождение')),
                ('info_ustav', models.TextField(blank=True, default=None, null=True, verbose_name='Информация о действующей редакии устава')),
                ('info_ustav_doc', models.TextField(blank=True, default=None, null=True, verbose_name='Последние изменения в учредительный документы')),
                ('info_ustav_doc_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Учредительные документы: Дополнительная информация/комментарии')),
                ('eio_uchast', models.BooleanField(default=None, null=True, verbose_name='ЕИО - единственный участник в одном лшице')),
                ('corp_dogovor', models.BooleanField(default=None, null=True, verbose_name='Корпоративный договор')),
                ('monopol', models.BooleanField(default=None, null=True, verbose_name='Субъект естественных монополий')),
                ('zastroy', models.BooleanField(default=None, null=True, verbose_name='Застройщик')),
                ('power', models.TextField(blank=True, default=None, null=True, verbose_name='Полномочия ОСУ/ОСА')),
                ('confirmation_procedure', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), blank=True, default=list, null=True, size=None, verbose_name='Способ подтверждения принятия решения')),
                ('confirmation_procedure_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Способ подтверждения принятия решения: Дополнительная информация/комментарии')),
                ('sposob_vibor', models.CharField(blank=True, choices=[('Устав', 'Устав'), ('Решение', 'Решение'), ('Закон', 'Закон')], default=None, null=True, verbose_name='Указанный способ закреплен')),
                ('zakup', models.BooleanField(default=None, null=True, verbose_name='Заказчик по закупкам')),
                ('laws_zakup', models.CharField(blank=True, choices=[('44-ФЗ', '44-ФЗ'), ('223-ФЗ', '223-ФЗ'), ('44-ФЗ и 223-ФЗ', '44-ФЗ и 223-ФЗ')], default=None, null=True, verbose_name='Закон по закупкам')),
                ('zakup_win', models.BooleanField(default=False, null=True, verbose_name='Победитель по закупке')),
                ('judicial_disputes', models.BooleanField(default=False, null=True, verbose_name='Судебные споры')),
                ('judicial_disputes_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Судебные споры: Дополнительная информация/комментарии')),
                ('bankrot', models.BooleanField(default=False, null=True, verbose_name='Банкротство')),
                ('bankrot_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Банкротство: Дополнительная информация/комментарии')),
                ('enforcement_proceedings', models.BooleanField(default=False, null=True, verbose_name='Исполнительное производство')),
                ('enforcement_proceedings_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Исполнительное производство: Дополнительная информация/комментарии')),
                ('priostanov', models.BooleanField(default=False, null=True, verbose_name='Приостановление операций снятия ДС со счета')),
                ('priostanov_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Приостановление операций: Дополнительная информация/комментарии')),
                ('SEM', models.BooleanField(default=False, null=True, verbose_name='Недружественное лицо')),
                ('SEM_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Недружественное лицо: Дополнительная информация/комментарии')),
                ('reorganization', models.BooleanField(default=False, null=True, verbose_name='Реорганизация / ликвидация')),
                ('reorganization_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Реорганизация / ликвидация: Дополнительная информация/комментарии')),
                ('unfulfilled_obligations', models.BooleanField(default=False, null=True, verbose_name='Невыполненные обязательства перед Банком')),
                ('unfulfilled_obligations_dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Невыполненные обязательства перед Банком: Дополнительная информация/комментарии')),
                ('license_revocation', models.BooleanField(default=False, null=True, verbose_name='Отзыв лицензии')),
                ('dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Дополнительная информация/комментарии')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Юридическое лицо',
                'verbose_name_plural': 'Юридические лица',
            },
        ),
        migrations.CreateModel(
            name='Role_in_deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Роль')),
            ],
        ),
        migrations.CreateModel(
            name='Unfriendly_countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Недружественная страна',
                'verbose_name_plural': 'Недружественные страны',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.TextField(verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('credit_product_type', models.TextField(verbose_name='Вид кредитного продукта')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма')),
                ('term', models.IntegerField(verbose_name='Срок (в месяцах)')),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процентная ставка (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('credit_product', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='legal_opin.credit_product', verbose_name='кредитный продукт')),
            ],
            options={
                'verbose_name': 'Сделка',
                'verbose_name_plural': 'Сделки',
            },
        ),
        migrations.CreateModel(
            name='ExecutiveBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Имя/Наименование')),
                ('inn', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='ИНН должен содержать 10 или 12 цифр', regex='^(\\d{10}|\\d{12})$')], verbose_name='ИНН')),
                ('job_title', models.TextField(blank=True, default=None, null=True, verbose_name='Должность')),
                ('date_of_authority', models.DateField(blank=True, default=None, null=True, verbose_name='Дата начала действия полномочий')),
                ('period_of_authority', models.TextField(blank=True, default=None, null=True, verbose_name='Срок полномочий')),
                ('doc_of_authority', models.TextField(blank=True, default=None, null=True, verbose_name='Документ, на основании которого избран ЕИО')),
                ('dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Дополнительная информация/комментарии')),
                ('legal_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executive_bodies', to='legal_opin.legalentity', verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Единоличный исполнительный орган',
                'verbose_name_plural': 'Единоличные исполнительные органы',
            },
        ),
        migrations.CreateModel(
            name='Collegial_governing_bodies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('governing_bodies', models.CharField(blank=True, choices=[('Совет директоров', 'Совет директоров'), ('Правление', 'Правление'), ('Наблюдательный совет', 'Наблюдательный совет')], default=None, null=True, verbose_name='Орган управления')),
                ('period_of_authority', models.TextField(blank=True, null=True, verbose_name='Срок полномочий ')),
                ('powers', models.TextField(blank=True, null=True, verbose_name='Полномочия')),
                ('date_of_authority', models.DateField(blank=True, default=None, null=True, verbose_name='Дата начала действия полномочий')),
                ('team_composition', models.TextField(blank=True, null=True, verbose_name='Состав')),
                ('dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Дополнительная информация/комментарии')),
                ('legal_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='governing_bodies', to='legal_opin.legalentity', verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Коллегиальный орган управления',
                'verbose_name_plural': 'Коллегиальные органы управления',
            },
        ),
        migrations.CreateModel(
            name='Collateral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collateral_type', models.CharField(blank=True, choices=[('RE', 'Недвижимость'), ('SE', 'Ценные бумаги'), ('SH', 'Доли в УК')], default=None, max_length=2, null=True, verbose_name='Тип обеспечения')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование')),
                ('cadastral_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кадастровый номер')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('related_objects_info', models.TextField(blank=True, null=True, verbose_name='Сведения о связанных объектах')),
                ('registered_rights_info', models.TextField(blank=True, null=True, verbose_name='Сведения о зарегестрированных правах')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('general_info_securities', models.TextField(blank=True, null=True, verbose_name='Общая информация')),
                ('registrar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Держатель реестра')),
                ('share_size', models.CharField(blank=True, max_length=255, null=True, verbose_name='Размер доли')),
                ('info_shares', models.TextField(blank=True, null=True, verbose_name='Сведения')),
                ('encumbrances', models.TextField(blank=True, null=True, verbose_name='Обременения')),
                ('deal', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='collaterals', to='legal_opin.deal', verbose_name='Сделка')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pledges', to='legal_opin.legalentity', verbose_name='Собственник/Залогодатель')),
            ],
            options={
                'verbose_name': 'Обеспечение',
                'verbose_name_plural': 'Обеспечение',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Имя/Наименование')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='ИНН должен содержать 10 или 12 цифр', regex='^(\\d{10}|\\d{12})$')], verbose_name='ИНН')),
                ('share', models.TextField(blank=True, null=True, verbose_name='Доля')),
                ('share_info', models.TextField(blank=True, null=True, verbose_name='Информация о доле')),
                ('address', models.TextField(blank=True, default=None, null=True, verbose_name='Юрисдикция/Гражданство')),
                ('dop_info', models.TextField(blank=True, default=None, null=True, verbose_name='Дополнительная информация/комментарии')),
                ('legal_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='legal_opin.legalentity', verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
        ),
        migrations.CreateModel(
            name='DealParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_major_deal', models.BooleanField(default=False, verbose_name='Крупная сделка')),
                ('major_deal_criteria', models.TextField(blank=True, null=True, verbose_name='Основание для признания сделки крупной')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='legal_opin.deal', verbose_name='Сделка')),
                ('legal_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deal_participations', to='legal_opin.legalentity', verbose_name='Юридическое лицо')),
                ('role', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='legal_opin.role_in_deal', verbose_name='роль')),
            ],
            options={
                'verbose_name': 'Участник сделки',
                'verbose_name_plural': 'Участники сделки',
                'unique_together': {('deal', 'legal_entity', 'role')},
            },
        ),
    ]
