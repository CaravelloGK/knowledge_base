"""
Django settings for knowledge_base project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import platform

import environ

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
environ.Env.read_env(os.path.join(BASE_DIR, './.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY'),

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django_filters',
    "django_bootstrap5",
    'django_ckeditor_5',
    'docs',
    'faq',
    'reviews',
    'risk',
    'legal_opin',
    'staff',
    'crispy_forms',
    'crispy_bootstrap5',
    'reporting'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # keycloak

]

AUTHENTICATION_BACKENDS = [
    # 'Main.auth.KeycloakBackend',  # Основной бэкенд. Добавить для prod!!!
    'django.contrib.auth.backends.ModelBackend',  # Резервный
]

# Настройки Keycloak -  Добавить для prod!!!
# KEYCLOAK_CONFIG = {
#     "SERVER_URL": "https://kk-dev.k8s.mcb.ru/",  # Без /auth для Keycloak >= 17
#     "REALM_NAME": "Legal_AD",
#     "CLIENT_ID": "Django_client",
#     "CLIENT_SECRET": "RsRq9g18Jh3T2VUE18ixZnBLk2niKYWv",
#     "REDIRECT_URI": "https://legal-dev-app02.mcb.ru/auth/callback/",  # Callback URL
#     'LOGOUT_REDIRECT_URI': 'https://legal-dev-app02.mcb.ru/',  # Новый параметр для перенаправления после выхода
#     'OIDC_LOGOUT_URL': 'https://kk-dev.k8s.mcb.ru/realms/Legal_AD/protocol/openid-connect/logout',
#     'KEYCLOAK_CREATE_USERS': True,  # Создавать пользователей Django при первом входе
#     'KEYCLOAK_UPDATE_USERS': True,  # Обновлять данные при каждом входе
# }


# Настройки Celery (для запросов ваписки)
# Настройки брокера и бэкенда результатов
# CELERY_BROKER_URL = 'amqp://guest:guest@localhost:5672//'
# CELERY_RESULT_BACKEND = 'django-db'
#
# # Основные настройки Celery
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TIMEZONE = 'UTC'
# CELERY_ENABLE_UTC = True
#
# # Настройки производительности
# CELERY_WORKER_MAX_TASKS_PER_CHILD = 1000  # Перезапуск воркера после 1000 задач
# CELERY_WORKER_PREFETCH_MULTIPLIER = 4      # Количество предзагружаемых задач на воркер
# CELERY_TASK_TIME_LIMIT = 1200               # Максимальное время на задачу
# # CELERY_TASK_SOFT_TIME_LIMIT = 540          # Мягкий лимит времени для graceful shutdown
#
# # Настройки очередей с приоритетами
# CELERY_TASK_QUEUES = {
#     'high_priority': {
#         'exchange': 'high_priority',
#         'routing_key': 'high_priority',
#     },
#     'default': {
#         'exchange': 'default',
#         'routing_key': 'default',
#     },
#     'low_priority': {
#         'exchange': 'low_priority',
#         'routing_key': 'low_priority',
#     }
# }
#
# Настройки retry
# CELERY_TASK_RETRY_DELAY_START = 3  # Начальная задержка в секундах
# CELERY_TASK_MAX_RETRIES = 3        # Максимальное количество повторов
# CELERY_TASK_RETRY_BACKOFF = True   # Экспоненциальные задержки
# CELERY_TASK_RETRY_BACKOFF_MAX = 600  # Максимальная задержка между повторами
#
# # Настройки мониторинга
# CELERY_TASK_TRACK_STARTED = True
# CELERY_TASK_SEND_SENT_EVENT = True
#
# # Настройки кэширования
# CELERY_TASK_RESULT_EXPIRES = timedelta(hours=24)  # Время хранения результатов
# CELERY_RESULT_EXTENDED = True  # Расширенная информация о результатах
#
# # Настройки для предотвращения потери задач
# CELERY_TASK_ACKS_LATE = True           # Подтверждение выполнения задачи только после успешного завершения
# CELERY_TASK_REJECT_ON_WORKER_LOST = True  # Перезапуск задач при потере воркера
#
#
#
# SESSION_COOKIE_AGE = 86400  # 1 день в секундах
# SESSION_SAVE_EVERY_REQUEST = True

ROOT_URLCONF = 'knowledge_base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'knowledge_base.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR + '/db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# CORS настройки
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# URL для редиректа после входа
LOGIN_URL = "/auth/login"  # URL для входа
LOGIN_REDIRECT_URL = "/"   # URL после успешного входа
LOGOUT_REDIRECT_URL = '/'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Указываем путь к статическим файлам
STATIC_URL = '/static/'

# Добавляем путь к корневой папке static (абсолютный путь)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# (Опционально) Если нужно собирать статику в одну папку для продакшна
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Настройки CKEditor
customColorPalette = [
    {
        'color': 'hsl(4, 90%, 58%)',
        'label': 'Red'
    },
    {
        'color': 'hsl(340, 82%, 52%)',
        'label': 'Pink'
    },
    {
        'color': 'hsl(291, 64%, 42%)',
        'label': 'Purple'
    },
    {
        'color': 'hsl(262, 52%, 47%)',
        'label': 'Deep Purple'
    },
    {
        'color': 'hsl(231, 48%, 48%)',
        'label': 'Indigo'
    },
    {
        'color': 'hsl(207, 90%, 54%)',
        'label': 'Blue'
    },
]

CKEDITOR_5_CUSTOM_CSS = 'path_to.css' # optional
# CKEDITOR_5_FILE_STORAGE = "path_to_storage.CustomStorage" # optional
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': {
            'items': ['heading', '|', 'bold', 'italic', 'link',
                      'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],
                    }

    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': {
            'items': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
                      'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable',
                    ],
            'shouldNotGroupWhenFull': True
        },
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',
            'tableProperties', 'tableCellProperties' ],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading' : {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        }
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    }
}

# Define a constant in settings.py to specify file upload permissions
CKEDITOR_5_FILE_UPLOAD_PERMISSION = "staff"  # Possible values: "staff", "authenticated", "any"

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Keycloak configuration
KEYCLOAK_CONFIG = {
    'KEYCLOAK_URL': env('KEYCLOAK_URL', default='http://localhost:8080'),
    'REALM_NAME': env('KEYCLOAK_REALM', default='master'),
    'CLIENT_ID': env('KEYCLOAK_CLIENT_ID', default='django-app'),
    'CLIENT_SECRET': env('KEYCLOAK_CLIENT_SECRET', default=''),
}